name: Deploy NFT Portal

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: sa-east-1
  ECR_REPOSITORY: nft-portal

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create ECR repos
        run: |
          for repo in "${ECR_REPOSITORY}-web" "${ECR_REPOSITORY}-frontend"; do
            if ! aws ecr describe-repositories --repository-names "$repo" >/dev/null 2>&1; then
              aws ecr create-repository --repository-name "$repo"
            fi
          done

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}-web:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}-web:latest

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: frontend/Dockerfile
          target: prod
          push: true
          build-args: |
            VITE_API_BASE_URL=https://api.nftmarketplace.com.br
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}-frontend:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}-frontend:latest

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          TAG: ${{ github.sha }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          FLOWER_BASIC_AUTH: ${{ secrets.FLOWER_BASIC_AUTH }}
          LE_EMAIL: ${{ secrets.LE_EMAIL }}
        run: |
          # Get ECR password
          ECR_PASSWORD=$(aws ecr get-login-password --region $AWS_REGION)
          
          # Setup SSH
          mkdir -p ~/.ssh
          echo "$EC2_KEY" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          
          # Deploy
          ssh -i ~/.ssh/ec2_key -o StrictHostKeyChecking=no "$EC2_USER@$EC2_HOST" << EOF
          set -e
          
          # Login to ECR
          echo "$ECR_PASSWORD" | sudo docker login --username AWS --password-stdin "$ECR_REGISTRY"
          
          # Pull latest images
          sudo docker pull "$ECR_REGISTRY/$ECR_REPOSITORY-web:$TAG"
          sudo docker pull "$ECR_REGISTRY/$ECR_REPOSITORY-frontend:$TAG"
          
          # Stop old containers
          sudo docker compose -f /opt/nft_portal/docker/docker-compose.prod.yml down || true
          
          # Update environment
          sudo tee /opt/nft_portal/.env >/dev/null << ENVEOF
          SECRET_KEY=$SECRET_KEY
          DEBUG=False
          ALLOWED_HOSTS=nftmarketplace.com.br,www.nftmarketplace.com.br,api.nftmarketplace.com.br
          USE_POSTGRES=1
          POSTGRES_HOST=db
          POSTGRES_PORT=5432
          POSTGRES_DB=$POSTGRES_DB
          POSTGRES_USER=$POSTGRES_USER
          POSTGRES_PASSWORD=$POSTGRES_PASSWORD
          CELERY_BROKER_URL=redis://redis:6379/0
          CELERY_RESULT_BACKEND=redis://redis:6379/0
          FRONTEND_ORIGINS=https://nftmarketplace.com.br,https://www.nftmarketplace.com.br
          API_ORIGIN=https://api.nftmarketplace.com.br
          FLOWER_BASIC_AUTH=$FLOWER_BASIC_AUTH
          LE_EMAIL=$LE_EMAIL
          ENVEOF
          
          # Start containers
          cd /opt/nft_portal
          sudo env ECR_REGISTRY="$ECR_REGISTRY" ECR_REPOSITORY="$ECR_REPOSITORY" TAG="$TAG" \
            docker compose -f docker/docker-compose.prod.yml up -d
          
          # Wait and check
          sleep 30
          sudo docker ps
          EOF