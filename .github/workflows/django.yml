name: Django CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: core.settings
      PYTHONPATH: ${{ github.workspace }}

      USE_POSTGRES: "0"
      DEBUG: ${{ vars.DEBUG }}
      ALLOWED_HOSTS: ${{ vars.ALLOWED_HOSTS }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

      CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
      CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}

      FLOWER_BASIC_AUTH: ${{ secrets.FLOWER_BASIC_AUTH }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Upgrade pip and install pipx
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipx

      - name: Install Poetry
        run: pipx install "poetry==1.8.4"

      - name: Configure Poetry (in-project venv)
        run: poetry config virtualenvs.in-project true

      - name: Cache Poetry & venv
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pypoetry
          key: ${{ runner.os }}-py3.13-${{ hashFiles('**/poetry.lock') }}

      - name: Install deps (no-root)
        run: poetry install --no-interaction --no-ansi --no-root

      - name: Migrate
        run: poetry run python manage.py migrate --noinput

      - name: Tests
        run: poetry run python manage.py test -v 2
