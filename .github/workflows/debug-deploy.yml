name: Debug Deploy Workflow

on:
  workflow_dispatch:  # Permite execução manual
  push:
    branches: [ "main" ]

env:
  AWS_REGION: sa-east-1
  ECR_REPOSITORY: nft-portal

jobs:
  debug-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug - List all files
        run: |
          echo "=== Project structure ==="
          find . -type f -name "*.yml" -o -name "*.yaml" -o -name "Dockerfile" -o -name "*.conf" | head -20
          echo ""
          echo "=== Docker files ==="
          ls -la docker/
          echo ""
          echo "=== Frontend files ==="
          ls -la frontend/
          echo ""
          echo "=== Nginx files ==="
          ls -la docker/nginx/

      - name: Debug - Check secrets
        run: |
          echo "=== Checking secrets ==="
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID != '' && 'SET' || 'NOT SET' }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY != '' && 'SET' || 'NOT SET' }}"
          echo "EC2_HOST: ${{ secrets.EC2_HOST != '' && 'SET' || 'NOT SET' }}"
          echo "EC2_USER: ${{ secrets.EC2_USER != '' && 'SET' || 'NOT SET' }}"
          echo "EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY != '' && 'SET' || 'NOT SET' }}"
          echo "SECRET_KEY: ${{ secrets.SECRET_KEY != '' && 'SET' || 'NOT SET' }}"
          echo "POSTGRES_DB: ${{ secrets.POSTGRES_DB != '' && 'SET' || 'NOT SET' }}"
          echo "POSTGRES_USER: ${{ secrets.POSTGRES_USER != '' && 'SET' || 'NOT SET' }}"
          echo "POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD != '' && 'SET' || 'NOT SET' }}"
          echo "FLOWER_BASIC_AUTH: ${{ secrets.FLOWER_BASIC_AUTH != '' && 'SET' || 'NOT SET' }}"
          echo "LE_EMAIL: ${{ secrets.LE_EMAIL != '' && 'SET' || 'NOT SET' }}"

      - name: Debug - Test AWS connection
        if: secrets.AWS_ACCESS_KEY_ID != ''
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Debug - AWS identity
        if: secrets.AWS_ACCESS_KEY_ID != ''
        run: |
          echo "=== AWS Identity ==="
          aws sts get-caller-identity || echo "Failed to get AWS identity"

      - name: Debug - Test SSH
        if: secrets.EC2_HOST != ''
        shell: bash
        env:
          TARGET: ${{ secrets.EC2_HOST }}
        run: |
          echo "=== Testing SSH connectivity ==="
          echo "Target: $TARGET"
          if command -v nc >/dev/null 2>&1; then
            echo "Using nc..."
            nc -z -w 5 "$TARGET" 22 && echo "✅ SSH port reachable" || echo "❌ SSH port not reachable"
          else
            echo "Using timeout..."
            timeout 5 bash -c "</dev/tcp/$TARGET/22" && echo "✅ SSH port reachable" || echo "❌ SSH port not reachable"
          fi

      - name: Debug - Test Docker builds
        run: |
          echo "=== Testing Docker builds ==="
          
          echo "Testing backend build..."
          if docker build -f docker/Dockerfile -t debug-backend .; then
            echo "✅ Backend build successful"
          else
            echo "❌ Backend build failed"
          fi
          
          echo "Testing frontend build..."
          if docker build -f frontend/Dockerfile --target prod -t debug-frontend ./frontend; then
            echo "✅ Frontend build successful"
          else
            echo "❌ Frontend build failed"
          fi

      - name: Debug - Test file encoding
        run: |
          echo "=== Testing file encoding ==="
          
          if [ -f "docker/docker-compose.prod.yml" ]; then
            echo "✅ docker-compose.prod.yml exists"
            base64 -w0 docker/docker-compose.prod.yml > /dev/null && echo "✅ Base64 encoding works"
          else
            echo "❌ docker-compose.prod.yml not found"
          fi
          
          if [ -f "docker/nginx/nginx.conf" ]; then
            echo "✅ nginx.conf exists"
            base64 -w0 docker/nginx/nginx.conf > /dev/null && echo "✅ Base64 encoding works"
          else
            echo "❌ nginx.conf not found"
          fi
          
          if [ -f "docker/nginx/nginx.ssl.conf" ]; then
            echo "✅ nginx.ssl.conf exists"
            base64 -w0 docker/nginx/nginx.ssl.conf > /dev/null && echo "✅ Base64 encoding works"
          else
            echo "❌ nginx.ssl.conf not found"
          fi

      - name: Debug - Summary
        run: |
          echo "=== DEBUG SUMMARY ==="
          echo "If all checks above passed, the main deploy workflow should work."
          echo "If any checks failed, fix those issues first."
          echo ""
          echo "Common issues:"
          echo "1. Missing secrets in GitHub repository settings"
          echo "2. EC2 instance not running or not accessible"
          echo "3. Docker files missing or corrupted"
          echo "4. AWS credentials invalid or expired"
