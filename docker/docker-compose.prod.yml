services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - ../.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 20

  web:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}-web:${TAG:-latest}
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      USE_POSTGRES: "1"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    command: >
      /bin/sh -c "
      python manage.py migrate --noinput &&
      python manage.py collectstatic --noinput &&
      gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - staticfiles:/app/staticfiles
      - media:/app/media
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health/ >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  celery_worker:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}-web:${TAG:-latest}
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      USE_POSTGRES: "1"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    command: >
      /bin/sh -c "
      celery -A core worker -l info -Q celery,default -n worker1@%h -E"
    restart: unless-stopped

  celery_beat:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}-web:${TAG:-latest}
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      USE_POSTGRES: "1"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    command: >
      /bin/sh -c "
      celery -A core beat -l info --schedule=/app/celerybeat-schedule/celerybeat-schedule"
    volumes:
      - celerybeat:/app/celerybeat-schedule
    restart: unless-stopped

  flower:
    image: mher/flower:2.0.1
    env_file:
      - ../.env
    environment:
      FLOWER_PORT: "5555"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}-frontend:${TAG:-latest}
    env_file:
      - ../.env
    volumes:
      - frontend_dist:/usr/share/nginx/html
    depends_on:
      - web
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      web:
        condition: service_healthy
      frontend:
        condition: service_started
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_dist:/usr/share/nginx/html:ro
      - staticfiles:/app/staticfiles:ro
      - media:/app/media:ro
      - letsencrypt:/etc/letsencrypt
      - certbot-challenge:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot-challenge:/var/www/certbot
    entrypoint: ["sh", "-c", "sleep infinity"]

volumes:
  pgdata:
  redisdata:
  celerybeat:
  staticfiles:
  media:
  frontend_dist:
  letsencrypt:
  certbot-challenge:
