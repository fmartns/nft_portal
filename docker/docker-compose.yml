services:
  db:
    image: postgres:16
    env_file:
      - ../.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    # Expor Postgres no host (apenas para desenvolvimento)
    ports:
      - "54321:5432"

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped
    # NÃ£o exponha redis pra Internet:
    # ports:
    #   - "6379:6379"

  web:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      USE_POSTGRES: "1"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    command: >
      /bin/sh -c "
      python manage.py migrate --noinput &&
      python manage.py collectstatic --noinput &&
      gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    ports:
      - "8000:8000"
    restart: unless-stopped

  celery_worker:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      USE_POSTGRES: "1"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    command: >
      /bin/sh -c "
      celery -A core worker -l info -Q celery,default -n worker1@%h -E"
    restart: unless-stopped

  celery_beat:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      USE_POSTGRES: "1"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    command: >
      /bin/sh -c "
      celery -A core beat -l info --schedule=/app/celerybeat-schedule/celerybeat-schedule"
    volumes:
      - celerybeat:/app/celerybeat-schedule
    restart: unless-stopped

  flower:
    image: mher/flower:2.0.1
    env_file:
      - ../.env
    environment:
      FLOWER_PORT: "5555"
      # Opcional (se definiu no .env): FLOWER_BASIC_AUTH=user:pass
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "5555:5555"
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    environment:
      # Point frontend to backend service URL inside the compose network
      - VITE_API_BASE_URL=http://127.0.0.1:8000
    volumes:
      - ../frontend:/app
    depends_on:
      - web
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  celerybeat:
